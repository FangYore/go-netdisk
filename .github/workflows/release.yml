name: Gofi Release

on: [push]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Set up golang
        uses: actions/setup-go@v2
        with:
          go-version: '^1.16.5'
      - run: go env -w GO111MODULE=on

      # 检出代码
      - name: Checkout Trigger Branch
        uses: actions/checkout@v2

      # 执行构建脚本
      - name: Excute Build Script
        run: ./gradlew
        
      # 列出产物
      - name: List output
        run: du -ah ./output      
        
      # # 压缩产物
      # - name: Compress
      #   uses: docker://gact/upx:latest
      #   with:
      #     dir: './output'
      #     upx_args: '-9'

      # 检查push操作触发的是否是master分之,只在master执行后续的release操作
      - name: Only release in the main branch
        if: github.ref != 'refs/heads/master'
        run: |
          echo 'current branch is not master, exit.'
          exit 1

      # 检查本次commit的类型是否是release commit
      - name: Check Commit Type
        uses: gsactions/commit-message-checker@v1
        with:
          pattern: '^chore: release v([0-9]+)\.([0-9]+)\.([0-9]+)(?:-([0-9A-Za-z-]+(?:\.[0-9A-Za-z-]+)*))?(?:\+[0-9A-Za-z-]+)?$'
          error: '只有 "chore: release v1.0.2" 这种格式的commit才会触发发布流程,注意冒号和release后面的空格'

      # 创建新的发布
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1.0.0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.tag.outputs.VERSION }}
          release_name: Release ${{ steps.tag.outputs.VERSION }}
          draft: false
          prerelease: false

      # 上传构建产物到发布
      - name: Upload Build Outputs
        uses: softprops/action-gh-release@v1
        with:
          files: |
            ./output/gofi-darwin-10.12-amd64
            ./output/gofi-linux-amd64
            ./output/gofi-linux-arm-5
            ./output/gofi-windows-4.0-amd64.exe
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
